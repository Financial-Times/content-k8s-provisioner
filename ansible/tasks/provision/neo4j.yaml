---
- name: Provision a persistent volume for Neo4j
  ec2_vol:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ region }}"
    zone: "{{ item }}"
    name: "{{ stack_name }}-neo4j-{{ item }}"
    volume_size: 100
    volume_type: gp2
    tags:
      environment: "{{ environment_type }}"
      teamDL: "universal.publishing.platform@ft.com"
      systemCode: "{{ platform }}"
  with_items: 
    - "{{ region }}a"
    - "{{ region }}b"
    - "{{ region }}c"
  register: ec2_vol_neo4j

- name: Provision a persistent volume for Neo4j Backup
  ec2_vol:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ region }}"
    zone: "{{ region }}a"
    name: "{{ stack_name }}-neo4j-backup-{{ region }}a"
    volume_size: 100
    volume_type: gp2
    tags:
      environment: "{{ environment_type }}"
      teamDL: "universal.publishing.platform@ft.com"
      systemCode: "{{ platform }}"
  register: ec2_vol_neo4j_backup

- name: Setup vol names
  set_fact:
    volume_info: []

# File System and Volume IDs for Neo4j and backup which needs to be added in the config
- name: Build EBS details for Neo4j
  set_fact:
    volume_info: "{{ volume_info }} + [ '{{ item.volume.zone}} => {{ item.volume_id }}' ]"
  with_items: "{{ ec2_vol_neo4j.results }}"

- name: EBS details for Neo4j volumes
  debug:
    msg: "{{ volume_info }}"

- name: EBS details for Neo4j backup
  debug:
    msg: "EBS Volume for Neo4j backup: {{ ec2_vol_neo4j_backup.volume.zone}} => {{ ec2_vol_neo4j_backup.volume_id }}"
