kind: ConfigMap
apiVersion: v1
metadata:
  name: elb-registrator-config
  namespace: default
data:
  #TODO parameterize this to be the cluster name
  dns.register_subdomain: k8s-publishing-upp-uk
  k8s.entry_point_service: pub-varnish

---
apiVersion: batch/v1
kind: Job
metadata:
  name: elb-registrator-job
spec:
  template:
    metadata:
      name: elb-registrator
    spec:
      # Keep trying to register in DNS until we manage to do it
      restartPolicy: OnFailure
      containers:
      - name: elb-registrator
        image: coco/coco-elb-dns-registrator:k8s_v0.0.4
        volumeMounts:
        #We need the certificates for being able to make the DynDNS http call
        - mountPath: /etc/ssl/certs
          name: certificates-storage
        env:
        - name: DOMAINS
          valueFrom:
            configMapKeyRef:
              name: elb-registrator-config
              key: dns.register_subdomain
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: aws.region
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: global-secrets
              key: aws.access_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: global-secrets
              key: aws.secret_access_key
        - name: KONSTRUCTOR_API_KEY
          valueFrom:
            secretKeyRef:
              name: global-secrets
              key: kon.dns_api.key
        - name: K8S_LB_SERVICE
          valueFrom:
            configMapKeyRef:
              name: elb-registrator-config
              key: k8s.entry_point_service
        - name: K8S_LB_SERVICE_NAMESPACE
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: k8s.app_namespace
      volumes:
      - name: certificates-storage
        hostPath:
          path: /usr/share/ca-certificates