apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: binary-writer
  labels:
    app: binary-writer
    visualize: "true"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: binary-writer
  template:
    metadata:
      labels:
        app: binary-writer
        visualize: "true"
    spec:
      containers:
      - name: binary-writer
        image: up-registry.ft.com/coco/binary-writer:v48
        env:
        - name: JAVA_OPTS
          value: "-Xms296m -Xmx296m -XX:+UseG1GC -server"
        - name: KAFKA_HOST
          value: "kafka"
        - name: KAFKA_PORT
          value: "9092"
        - name: BUCKET_PATH
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: aws.s3.image.binaries.bucket
        - name: S3_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: global-secrets
              key: aws.access_key_id
        - name: S3_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: global-secrets
              key: aws.secret_access_key
        - name: FAKE_SERVICE
          value: "false"
        ports:
        - containerPort: 8080
        livenessProbe:
          initialDelaySeconds: 5
          tcpSocket:
            port: 8080
        readinessProbe:
          httpGet:
            path: /__gtg
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30

---

kind: Service
apiVersion: v1
metadata:
  name: binary-writer
  labels:
    app: binary-writer
    visualize: "true"
    hasHealthcheck: "true"
    healthcheckSeverity: warning
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: binary-writer
