apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kafka
  labels:
    app: kafka
    visualize: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
        visualize: "true"
    spec:
      containers:
      - name: kafka
        image: wurstmeister/kafka:0.8.2.0
        env:
        - name: KAFKA_MESSAGE_MAX_BYTES
          value: "16777216"
        - name: KAFKA_REPLICA_FETCH_MAX_BYTES
          value: "16777216"
        - name: DOCKER_HOST
          value: "localhost:2375"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: "kafka"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "localhost:2181"
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_PORT
          value: "9092"
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        ports:
        - containerPort: 9092
        livenessProbe:
          initialDelaySeconds: 5
          tcpSocket:
            port: 9092
        volumeMounts:
         - name: kafka-persistent-storage
           mountPath: /kafka
           subPath: kafka-data
      - name: zookeeper
        image: wurstmeister/zookeeper
        ports:
        - containerPort: 2181
        livenessProbe:
          initialDelaySeconds: 5
          tcpSocket:
            port: 2181
        volumeMounts:
        - name: kafka-persistent-storage
          mountPath: /opt/zookeeper-3.4.6/data
          subPath: zk-data
      - name: kafka-proxy
        image: coco/kafka-proxy:v1.0.0
        imagePullPolicy: Always
        env:
        - name: RP_FETCH_MESSAGE_MAX_BYTES
          value: "16777216"
        - name: RP_CONSUMER_REQUEST_MAX_BYTES
          value: "17825792"
        - name: RP_ZOOKEEPER_CONNECT
          value: "localhost:2181"
        - name: RP_MAX_REQUEST_SIZE
          value: "17825792"
        ports:
        - containerPort: 8082
        livenessProbe:
          initialDelaySeconds: 5
          tcpSocket:
            port: 8082
      volumes:
       - name: kafka-persistent-storage
         awsElasticBlockStore:
           volumeID: vol-0a7ee795314cde11c
           fsType: ext4

---

kind: Service
apiVersion: v1
metadata:
  name: kafka
  labels:
    app: kafka
    visualize: "true"
spec:
  ports:
    - port: 8082
      name: "kafka-proxy"
      targetPort: 8082
    - port: 9092
      name: "kafka"
      targetPort: 9092
    - port: 2181
      name: "zookeeper"
      targetPort: 2181
  selector:
    app: kafka
