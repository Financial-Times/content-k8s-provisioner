apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: concepts-kafka-bridge-pub-pre-prod
  labels:
    app: concepts-kafka-bridge-pub-pre-prod
    visualize: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: concepts-kafka-bridge-pub-pre-prod
  template:
    metadata:
      labels:
        app: concepts-kafka-bridge-pub-pre-prod
        visualize: "true"
    spec:
      containers:
      - name: concepts-kafka-bridge-pub-pre-prod
        image:  coco/coco-kafka-bridge:remove-host-based-routing
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /etc/ssl/certs
          name: certificates-storage
        env:
        - name: QUEUE_PROXY_ADDRS
          value: "https://pub-pre-prod-up.ft.com/__kafka-rest-proxy"
        - name: GROUP_ID
          value: "k8s-concepts-kafka-bridge-pub-pre-prod"
        - name: CONSUMER_AUTOCOMMIT_ENABLE
          value: "true"
        - name: TOPIC
          value: "Concept"
        - name: PRODUCER_HOST
          value: "http://kafka:8082"
        - name: PRODUCER_TYPE
          value: "proxy"
        - name: AUTHORIZATION_KEY
          valueFrom:
            secretKeyRef:
              name: pub-auth
              key: pub-pre-prod-auth
        ports:
        - containerPort: 8080
        livenessProbe:
          initialDelaySeconds: 5
          tcpSocket:
            port: 8080
      volumes:
      - name: certificates-storage
        hostPath:
          path: /usr/share/ca-certificates

---

kind: Service
apiVersion: v1
metadata:
  name: concepts-kafka-bridge-pub-pre-prod
  labels:
    app: concepts-kafka-bridge-pub-pre-prod
    visualize: "true"
    hasHealthcheck: "true"
spec:
  ports:
    - port: 8080
      name: "8080"
      targetPort: 8080
  selector:
    app: concepts-kafka-bridge-pub-pre-prod

