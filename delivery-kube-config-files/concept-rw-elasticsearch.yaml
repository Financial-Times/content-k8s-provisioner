apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: concept-rw-elasticsearch
  labels:
    app: concept-rw-elasticsearch
    visualize: "true"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: concept-rw-elasticsearch
  template:
    metadata:
      labels:
        app: concept-rw-elasticsearch
        visualize: "true"
    spec:
      containers:
      - name: concept-rw-elasticsearch
        image:  coco/concept-rw-elasticsearch:0.0.12
        imagePullPolicy: Always
        resources:
          limits:
            memory: 256Mi
        env:
        - name: APP_PORT
          value: "8080"
        - name: ELASTICSEARCH_WHITELISTED_CONCEPTS
          value: "genres,topics,sections,subjects,locations,brands,organisations,people"
        - name: ELASTICSEARCH_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: aws.elasticsearch.endpoint
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: global-secrets
              key: aws.access_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: global-secrets
              key: aws.secret_access_key
        - name: ELASTICSEARCH_REGION
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: aws.region
        livenessProbe:
          initialDelaySeconds: 5
          tcpSocket:
            port: 8080
        readinessProbe:
          httpGet:
            path: /__gtg
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
        ports:
        - containerPort: 8080

---

kind: Service
apiVersion: v1
metadata:
  name: concept-rw-elasticsearch
  labels:
    app: concept-rw-elasticsearch
    visualize: "true"
    hasHealthcheck: "true"
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: concept-rw-elasticsearch

